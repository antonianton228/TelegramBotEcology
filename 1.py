import telebot
import json
import requests
import json

bot = telebot.TeleBot('5318941676:AAE65AOZ11ylYJJmajr1PoJ2yM41xMpTVLo')

flag = True


@bot.message_handler(content_types=['text'])
def start(message):
        global flag
        if message.text == '/start':
                bot.send_message(message.from_user.id, '''–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! 
–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ó–µ–º–ª—é –≤ —á–∏—Å—Ç–æ—Ç–µ. üå±‚ôªÔ∏è
–Ø –ø–æ–¥—Å–∫–∞–∂—É –≤–∞–º, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –±–ª–∏–∂–∞–π—à–∏–π –ø—É–Ω–∫—Ç –ø–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –æ—Ç—Ö–æ–¥–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ /find –¥–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ—Ä—Ç–∏—Ä–æ–≤–æ–∫. –ê —Ç–∞–∫ –∂–µ –∑–∞—Ö–æ–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç: https://blooming-headland-96587.herokuapp.com/''')
        elif message.text == '/find':
                bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é")
        elif message.text == '/report':
                bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.")
                flag = False
        elif message.text == 'aaaddd':
                with open('reports.json', 'r', encoding='utf-8') as fh:
                        bot.send_document(message.from_user.id, fh)


@bot.message_handler(content_types=['location'])
def find(message):
        global flag, dict_of_reports
        if flag:
                print(message.location.longitude, message.location.latitude)
                bot.send_message(message.from_user.id, '–ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫')
                lon, lat = message.location.longitude, message.location.latitude

                dict_of_cit = requests.get('https://xn--1-otblt.xn--p1ai/map/rm.php?city=-1').json()
                cur_cit = {'id': '1', 'lat': '55.7580321449', 'lng': '37.6168444863', 'title': '–ú–æ—Å–∫–≤–∞'}
                cur_c = 1000000000
                for i in dict_of_cit:
                        if (abs(lat - float(i['lat'])) ** 2 + abs(lon - float(i['lng'])) ** 2) ** 0.5 < cur_c:
                                cur_cit = i
                                cur_c = (abs(lat - float(i['lat'])) ** 2 + abs(lon - float(i['lng'])) ** 2) ** 0.5
                id = cur_cit['id']

                dict_of_rec = requests.get(f'https://—Å–º–∏1.—Ä—Ñ/map/rm.php?city={id}').json()
                result = []
                metr = 0.0001
                while len(result) <= 5:
                        result = []
                        metr += 0.0001
                        for i in dict_of_rec:
                                lat1, lon1 = float(dict_of_rec[i]['lat']), float(dict_of_rec[i]['lng'])
                                if abs(lon - lon1) <= metr and abs(lat - lat1) <= metr:
                                        result.append(dict_of_rec[i])
                print(result)

                for i in result:
                        bot.send_message(message.from_user.id, i['title'])
                        bot.send_location(message.from_user.id, *tuple((float(i['lat']), float(i['lng']))))
                bot.send_message(message.from_user.id,
                                 '–ü–æ–∏—Å–∫ –æ–∫–æ–Ω—á–µ–Ω. –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –Ω–∞—à–µ–ª —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, –æ –∫–æ—Ç–æ—Ä—ã—Ö –≤–∞–º –∏–∑–≤–µ—Å—Ç–Ω–æ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /report –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.')
        else:
                with open('reports.json', 'r', encoding='utf-8') as fh:
                        dict_of_reports = json.load(fh)
                dict_of_reports[str(len(dict_of_reports))] = str(message)
                with open('reports.json', 'w', encoding='utf-8') as fh:
                        fh.write(json.dumps(dict_of_reports, ensure_ascii=False))
                flag = True
                bot.send_message(message.from_user.id,
                                 '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å')


bot.polling(none_stop=True)
